<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<workflow-app xmlns="uri:oozie:workflow:0.5" name="hbaseExportSnapshotBackupv1 for table ${srcTableName} to Cluster: ${dest_dfs_internal_nameservices}">
    <parameters>
        <property>
            <name>srcClusterZnode</name>
            <value>/hbase-secure</value>
        </property>
        <property>
            <name>destClusterZnode</name>
            <value>/hbase-secure</value>
        </property>
        <property>
            <name>srcClusterSecurity</name>
            <value>kerberos</value>
        </property>
        <property>
            <name>srcClusterRealm</name>
            <value>HWX.COM</value>
        </property>
        <property>
            <name>srcClusterRPC</name>
            <value>authentication</value>
        </property>
        <property>
            <name>destClusterRPC</name>
            <value>authentication</value>
        </property>
        <property>
            <name>destHbaseRootDir</name>
            <value>/apps/hbase/data</value>
        </property>
        <property>
            <name>srcSnapshotName</name>
            <value>${src_dfs_internal_nameservices}_${srcTableName}_ooziebackup</value>
        </property>
        <property>
            <name>destSnapshotName</name>
            <value>${srcSnapshotName}</value>
        </property>
        <property>
            <name>destTableName</name>
            <value>ooziebackups:${destSnapshotName}_ooziebackupclone</value>
        </property>
        <property>
            <name>exportBandwidth</name>
            <value>25</value>
        </property>
        <property>
            <name>exportMappers</name>
            <value>4</value>
        </property>
    </parameters>
    <global>
        <configuration>
            <property>
                <name>oozie.launcher.mapreduce.job.hdfs-servers</name>
                <value>hdfs://${src_dfs_internal_nameservices},hdfs://${dest_dfs_internal_nameservices}</value>
            </property>
            <property>
                <name>oozie.launcher.dfs.nameservices</name>
                <value>${src_dfs_internal_nameservices},${dest_dfs_internal_nameservices}</value>
            </property>
            <property>
                <name>oozie.launcher.dfs.client.failover.proxy.provider.${dest_dfs_internal_nameservices}</name>
                <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
            </property>
            <property>
                <name>oozie.launcher.dfs.ha.namenodes.${dest_dfs_internal_nameservices}</name>
                <value>nn1,nn2</value>
            </property>
            <property>
                <name>oozie.launcher.dfs.namenode.rpc-address.${dest_dfs_internal_nameservices}.nn1</name>
                <value>${dest_dfs_namenode_rpc_address_nn1}</value>
            </property>
            <property>
                <name>oozie.launcher.dfs.namenode.rpc-address.${dest_dfs_internal_nameservices}.nn2</name>
                <value>${dest_dfs_namenode_rpc_address_nn2}</value>
            </property>
            <property>
                <name>oozie.launcher.mapreduce.job.send-token-conf</name>
                <value>mapreduce.jobhistory.principal|^dfs.nameservices|^dfs.namenode.rpc-address.*|^dfs.ha.namenodes.*|^dfs.client.failover.proxy.provider.*|dfs.namenode.kerberos.principal</value>
            </property>
            <property>
                <name>mapreduce.job.hdfs-servers</name>
                <value>hdfs://${src_dfs_internal_nameservices},hdfs://${dest_dfs_internal_nameservices}</value>
            </property>
            <property>
                <name>dfs.client.failover.proxy.provider.${dest_dfs_internal_nameservices}</name>
                <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
            </property>
            <property>
                <name>dfs.ha.namenodes.${dest_dfs_internal_nameservices}</name>
                <value>nn1,nn2</value>
            </property>
            <property>
                <name>dfs.namenode.rpc-address.${dest_dfs_internal_nameservices}.nn1</name>
                <value>${dest_dfs_namenode_rpc_address_nn1}</value>
            </property>
            <property>
                <name>mapreduce.job.send-token-conf</name>
                <value>mapreduce.jobhistory.principal|^dfs.nameservices|^dfs.namenode.rpc-address.*|^dfs.ha.namenodes.*|^dfs.client.failover.proxy.provider.*|dfs.namenode.kerberos.principal</value>
            </property>
            <property>
                <name>dfs.namenode.rpc-address.${dest_dfs_internal_nameservices}.nn1</name>
                <value>${dest_dfs_namenode_rpc_address_nn1}</value>
            </property>
            <property>
                <name>dfs.namenode.rpc-address.${dest_dfs_internal_nameservices}.nn2</name>
                <value>${dest_dfs_namenode_rpc_address_nn2}</value>
            </property>
        </configuration>
    </global>
    <credentials>
        <credential name="src-creds" type="hbase">
            <property>
                <name>hadoop.security.authentication</name>
                <value>${srcClusterSecurity}</value>
            </property>
            <property>
                <name>hbase.security.authentication</name>
                <value>${srcClusterSecurity}</value>
            </property>
            <property>
                <name>hbase.master.kerberos.principal</name>
                <value>hbase/_HOST@${srcClusterRealm}</value>
            </property>
            <property>
                <name>hbase.regionserver.kerberos.principal</name>
                <value>hbase/_HOST@${srcClusterRealm}</value>
            </property>
            <property>
                <name>hbase.zookeeper.quorum</name>
                <value>${srcClusterZkQuorum}</value>
            </property>
            <property>
                <name>hadoop.rpc.protection</name>
                <value>${srcClusterRPC}</value>
            </property>
            <property>
                <name>hbase.rpc.protection</name>
                <value>${srcClusterRPC}</value>
            </property>
            <property>
                <name>zookeeper.znode.parent</name>
                <value>${srcClusterZnode}</value>
            </property>
        </credential>
        <credential name="dest-creds" type="hbase">
            <property>
                <name>hadoop.security.authentication</name>
                <value>${destClusterSecurity}</value>
            </property>
            <property>
                <name>hbase.security.authentication</name>
                <value>${destClusterSecurity}</value>
            </property>
            <property>
                <name>hbase.master.kerberos.principal</name>
                <value>hbase/_HOST@${destClusterRealm}</value>
            </property>
            <property>
                <name>hbase.regionserver.kerberos.principal</name>
                <value>hbase/_HOST@${destClusterRealm}</value>
            </property>
            <property>
                <name>hbase.zookeeper.quorum</name>
                <value>${destClusterZkQuorum}</value>
            </property>
            <property>
                <name>hadoop.rpc.protection</name>
                <value>${destClusterRPC}</value>
            </property>
            <property>
                <name>hbase.rpc.protection</name>
                <value>${destClusterRPC}</value>
            </property>
            <property>
                <name>zookeeper.znode.parent</name>
                <value>${srcClusterZnode}</value>
            </property>
        </credential>
    </credentials>
    <start to="hbaseExportSnapshotBackupv1"/>
    <action cred="src-creds,dest-creds" name="hbaseExportSnapshotBackupv1">
        <shell xmlns="uri:oozie:shell-action:0.3">
            <job-tracker>hdfs://${src_dfs_internal_nameservices}</job-tracker>
            <name-node>${nameNode}</name-node>
            <exec>hbaseExportSnapshotBackupv1.sh</exec>
            <env-var>srcClusterSecurity=${srcClusterSecurity}</env-var>
            <env-var>srcClusterRealm=${srcClusterRealm}</env-var>
            <env-var>srcClusterZkQuorum=${srcClusterZkQuorum}</env-var>
            <env-var>srcClusterRPC=${srcClusterRPC}</env-var>
            <env-var>srcClusterZnode=${srcClusterZnode}</env-var>
            <env-var>destClusterSecurity=${destClusterSecurity}</env-var>
            <env-var>destClusterRealm=${destClusterRealm}</env-var>
            <env-var>destClusterZkQuorum=${destClusterZkQuorum}</env-var>
            <env-var>destClusterRPC=${destClusterRPC}</env-var>
            <env-var>destClusterZnode=${destClusterZnode}</env-var>
            <env-var>dest_dfs_internal_nameservices=${dest_dfs_internal_nameservices}</env-var>
            <env-var>dest_dfs_namenode_rpc_address_nn1=${dest_dfs_namenode_rpc_address_nn1}</env-var>
            <env-var>dest_dfs_namenode_rpc_address_nn2=${dest_dfs_namenode_rpc_address_nn2}</env-var>
            <env-var>srcSnapshotName=${srcSnapshotName}</env-var>
            <env-var>srcTableName=${srcTableName}</env-var>
            <env-var>destSnapshotName=${destSnapshotName}</env-var>
            <env-var>destTableName=${destTableName}</env-var>
            <env-var>destTableName=${destTableName}</env-var>
            <env-var>destHbaseRootDir=${destHbaseRootDir}</env-var>
            <env-var>exportMappers=${exportMappers}</env-var>
            <env-var>src_dfs_internal_nameservices=${src_dfs_internal_nameservices}</env-var>
            <env-var>exportBandwidth=${exportBandwidth}</env-var>
            <file>hbaseExportSnapshotBackupv1.sh</file>
        </shell>
        <ok to="end"/>
        <error to="kill"/>
    </action>
    <kill name="kill">
        <message>${wf:errorMessage(wf:lastErrorNode())}</message>
    </kill>
    <end name="end"/>
</workflow-app>
